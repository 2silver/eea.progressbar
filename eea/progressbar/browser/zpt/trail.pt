<html xmlns:tal="http://xml.zope.org/namespaces/tal"
  xmlns:metal="http://xml.zope.org/namespaces/metal"
  tal:omit-tag=""
  i18n:domain="eea"
  tal:define="
    info view/info;
    progress info/progress">

<div class="eea-progresstrail" tal:attributes="data-baseurl string:${context/absolute_url}">
<div class="progresstrail"
 tal:define="steps python: list(view.table);
            idx python: [steps.index(state) for state in steps if state[0] == view.state];
            current_idx python: idx[0] if len(idx) > 0 else -1">
  <tal:step repeat="step steps">
    <div tal:define="
      odd repeat/step/odd;
      start repeat/step/start;
      end repeat/step/end;
      odd python:'progress-odd' if (odd or progress >= 100) else 'progress-even';
      state python:step[0];
      done python:step[1];
      width python:step[2];
      title python:step[3];
      description python:step[4];" tal:attributes="
      data-title title;
      data-description description;
      data-titledesc python:u'%s%s' % (title, (u' - %s' % description) if description != title else u'');
      style python:'width: %s%%' % width;
      class python:('progresstrail-step progresstrail-current %s' % odd) if (state == view.state) else 'progresstrail-step %s' % odd;"
      >
      <span tal:define="
        klass python:'progresstrail-mask';
        klass python:klass + ' first' if start else klass;
        klass python:klass + ' last' if end else klass;" tal:attributes="class klass"></span>
      <span tal:define="
        percent python: str(done);
        after python: current_idx < steps.index(step);
        current_step python: current_idx == steps.index(step);
        base_class python: ('eea-icon state-trail-%s' % percent);
        current_class python: '%s %s' % (base_class, 'trail-current');
        checked_class python: '%s %s' % (base_class, 'trail-checked');
        first_class python: '%s %s' % (base_class, 'trail-first');
        last_class python: '%s %s' % (base_class, 'trail-last');
        klass python: base_class if after else checked_class;
        klass python: current_class if current_step and current_idx > 0 else klass;
        klass python: first_class if start else klass;
        klass python: '%s %s' % (first_class, 'trail-checked') if start and current_idx > 0 else klass;
        klass python: '%s %s' % (first_class, 'trail-current') if start and current_step and current_idx == 0 else klass;
        klass python: last_class if end else klass;
        klass python: '%s %s %s' % (base_class, 'trail-done', 'trail-checked') if end and current_step else klass;"
        tal:attributes="class klass"></span>
      <span class="progresstrail-body" tal:content="title"></span>
    </div>
  </tal:step>
</div>
</div>
</html>
